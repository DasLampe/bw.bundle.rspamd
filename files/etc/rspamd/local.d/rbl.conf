# List of domains that are not checked by surb
url_whitelist = "file://$CONFDIR/local.d/maps.d/surbl-whitelist.inc.local";

rbls {
% if cfg.get('rbl', {}).get("spamhaus_dqs_key", False):
    spamhaus {
        rbl = "${cfg.get('rbl', {}).get('spamhaus_dqs_key')}.zen.dq.spamhaus.net";
        from = false;
    }
    spamhaus_from {
        from = true;
        received = false;
        rbl = "${cfg.get('rbl', {}).get('spamhaus_dqs_key')}.zen.dq.spamhaus.net";
        returncodes {
            # Add a generig hit on ZEN. It's safe to tag as spam if the last untrusted relay is in this combined list
            #          SPAMHAUS_ZEN_SBL = "127.0.0.2";
            #          SPAMHAUS_ZEN_CSS = "127.0.0.3";
            #          SPAMHAUS_ZEN_XBL = [ "127.0.0.4", "127.0.0.5", "127.0.0.6", "127.0.0.7" ];
            #          SPAMHAUS_ZEN_PBL = [ "127.0.0.10", "127.0.0.11" ];
            SPAMHAUS_ZEN = [ "127.0.0.2", "127.0.0.3", "127.0.0.4", "127.0.0.5", "127.0.0.6", "127.0.0.7", "127.0.0.9", "127.0.0.10", "127.0.0.11" ];
        }
    }
    spamhaus_authbl_received {
        # Check if the sender client is listed in AuthBL (AuthBL is *not* part of ZEN)
        rbl = "${cfg.get('rbl', {}).get('spamhaus_dqs_key')}.authbl.dq.spamhaus.net";
        from = false;
        received = true;
        ipv6 = true;
        returncodes {
            SH_AUTHBL_RECEIVED = "127.0.0.20"
        }
    }
    spamhaus_dbl {
        # Add checks on the HELO string
        rbl = "${cfg.get('rbl', {}).get('spamhaus_dqs_key')}.dbl.dq.spamhaus.net";
        helo = true;
        rdns = true;
        dkim = true;
        disable_monitoring = true;
        returncodes {
            RBL_DBL_SPAM = "127.0.1.2";
            RBL_DBL_PHISH = "127.0.1.4";
            RBL_DBL_MALWARE = "127.0.1.5";
            RBL_DBL_BOTNET = "127.0.1.6";
            RBL_DBL_ABUSED_SPAM = "127.0.1.102";
            RBL_DBL_ABUSED_PHISH = "127.0.1.104";
            RBL_DBL_ABUSED_MALWARE = "127.0.1.105";
            RBL_DBL_ABUSED_BOTNET = "127.0.1.106";
            RBL_DBL_DONT_QUERY_IPS = "127.0.1.255";
        }
    }
    spamhaus_dbl_fullurls {
        ignore_defaults = true;
        no_ip = true;
        rbl = "${cfg.get('rbl', {}).get('spamhaus_dqs_key')}.dbl.dq.spamhaus.net";
        selector = 'urls:get_host'
        disable_monitoring = true;
        returncodes {
            DBLABUSED_SPAM_FULLURLS = "127.0.1.102";
            DBLABUSED_PHISH_FULLURLS = "127.0.1.104";
            DBLABUSED_MALWARE_FULLURLS = "127.0.1.105";
            DBLABUSED_BOTNET_FULLURLS = "127.0.1.106";
        }
    }
    spamhaus_zrd {
        # Add checks on the HELO string also for DQS
        rbl = "${cfg.get('rbl', {}).get('spamhaus_dqs_key')}.zrd.dq.spamhaus.net";
        helo = true;
        rdns = true;
        dkim = true;
        disable_monitoring = true;
        returncodes {
        RBL_ZRD_VERY_FRESH_DOMAIN = ["127.0.2.2", "127.0.2.3", "127.0.2.4"];
        RBL_ZRD_FRESH_DOMAIN = [
        "127.0.2.5", "127.0.2.6", "127.0.2.7", "127.0.2.8", "127.0.2.9", "127.0.2.10", "127.0.2.11", "127.0.2.12", "127.0.2.13", "127.0.2.14", "127.0.2.15", "127.0.2.16", "127.0.2.17", "127.0.2.18", "127.0.2.19", "127.0.2.20", "127.0.2.21", "127.0.2.22", "127.0.2.23", "127.0.2.24"
        ];
        RBL_ZRD_DONT_QUERY_IPS = "127.0.2.255";
        }
    }

    "SPAMHAUS_ZEN_URIBL" {
        enabled = true;
        rbl = "${cfg.get('rbl', {}).get('spamhaus_dqs_key')}.zen.dq.spamhaus.net";
        resolve_ip = true;
        checks = ['urls'];
        replyto = true;
        emails = true;
        ipv4 = true;
        ipv6 = true;
        emails_domainonly = true;
        returncodes {
            URIBL_SBL = "127.0.0.2";
            URIBL_SBL_CSS = "127.0.0.3";
            URIBL_XBL = ["127.0.0.4", "127.0.0.5", "127.0.0.6", "127.0.0.7"];
            URIBL_PBL = ["127.0.0.10", "127.0.0.11"];
            URIBL_DROP = "127.0.0.9";
        }
    }

    SH_EMAIL_DBL {
        ignore_defaults = true;
        replyto = true;
        emails_domainonly = true;
        disable_monitoring = true;
        rbl = "${cfg.get('rbl', {}).get('spamhaus_dqs_key')}.dbl.dq.spamhaus.net"
        returncodes = {
            SH_EMAIL_DBL = [
                "127.0.1.2",
                "127.0.1.4",
                "127.0.1.5",
                "127.0.1.6"
            ];
            SH_EMAIL_DBL_ABUSED = [
                "127.0.1.102",
                "127.0.1.104",
                "127.0.1.105",
                "127.0.1.106"
            ];
            SH_EMAIL_DBL_DONT_QUERY_IPS = [ "127.0.1.255" ];
        }
    }

    SH_EMAIL_ZRD {
        ignore_defaults = true;
        replyto = true;
        emails_domainonly = true;
        disable_monitoring = true;
        rbl = "${cfg.get('rbl', {}).get('spamhaus_dqs_key')}.zrd.dq.spamhaus.net"
        returncodes = {
            SH_EMAIL_ZRD_VERY_FRESH_DOMAIN = ["127.0.2.2", "127.0.2.3", "127.0.2.4"];
            SH_EMAIL_ZRD_FRESH_DOMAIN = [
                "127.0.2.5", "127.0.2.6", "127.0.2.7", "127.0.2.8", "127.0.2.9", "127.0.2.10", "127.0.2.11", "127.0.2.12", "127.0.2.13", "127.0.2.14", "127.0.2.15", "127.0.2.16", "127.0.2.17", "127.0.2.18", "127.0.2.19", "127.0.2.20", "127.0.2.21", "127.0.2.22", "127.0.2.23", "127.0.2.24"
            ];
            SH_EMAIL_ZRD_DONT_QUERY_IPS = [ "127.0.2.255" ];
        }
    }
    "DBL" {
        # override the defaults for DBL defined in modules.d/rbl.conf
        rbl = "${cfg.get('rbl', {}).get('spamhaus_dqs_key')}.dbl.dq.spamhaus.net";
        disable_monitoring = true;
    }
    "ZRD" {
        ignore_defaults = true;
        rbl = "${cfg.get('rbl', {}).get('spamhaus_dqs_key')}.zrd.dq.spamhaus.net";
        no_ip = true;
        dkim = true;
        emails = true;
        emails_domainonly = true;
        urls = true;
        returncodes = {
            ZRD_VERY_FRESH_DOMAIN = ["127.0.2.2", "127.0.2.3", "127.0.2.4"];
            ZRD_FRESH_DOMAIN = ["127.0.2.5", "127.0.2.6", "127.0.2.7", "127.0.2.8", "127.0.2.9", "127.0.2.10", "127.0.2.11", "127.0.2.12", "127.0.2.13", "127.0.2.14", "127.0.2.15", "127.0.2.16", "127.0.2.17", "127.0.2.18", "127.0.2.19", "127.0.2.20", "127.0.2.21", "127.0.2.22", "127.0.2.23", "127.0.2.24"];
        }
    }
    spamhaus_sbl_url {
        ignore_defaults = true
        rbl = "${cfg.get('rbl', {}).get('spamhaus_dqs_key')}.sbl.dq.spamhaus.net";
        checks = ['urls'];
        disable_monitoring = true;
        returncodes {
            SPAMHAUS_SBL_URL = "127.0.0.2";
        }
    }
% else:
    "DBL" {
        ignore_defaults = true; # for compatibility with old defaults
        rbl = "dbl.spamhaus.org";
        no_ip = true;
        checks = ['emails', 'dkim', 'urls'];
        emails_domainonly = true;

        returncodes = {
        # spam domain
        DBL_SPAM = "127.0.1.2";
        # phish domain
        DBL_PHISH = "127.0.1.4";
        # malware domain
        DBL_MALWARE = "127.0.1.5";
        # botnet C&C domain
        DBL_BOTNET = "127.0.1.6";
        # abused legit spam
        DBL_ABUSE = "127.0.1.102";
        # abused spammed redirector domain
        DBL_ABUSE_REDIR = "127.0.1.103";
        # abused legit phish
        DBL_ABUSE_PHISH = "127.0.1.104";
        # abused legit malware
        DBL_ABUSE_MALWARE = "127.0.1.105";
        # abused legit botnet C&C
        DBL_ABUSE_BOTNET = "127.0.1.106";
        # error - IP queries prohibited!
        DBL_PROHIBIT = "127.0.1.255";
        # issue #3074
        DBL_BLOCKED_OPENRESOLVER = "127.255.255.254";
        DBL_BLOCKED = "127.255.255.255";
        }
    }
% endif

    "SURBL_MULTI" {
        ignore_defaults = true; # for compatibility with old defaults
        rbl = "multi.surbl.org";
        checks = ['emails', 'dkim', 'urls'];
        emails_domainonly = true;
        urls = true;

        returnbits = {
            CRACKED_SURBL = 128; # From February 2016
            ABUSE_SURBL = 64;
            CT_SURBL = 32;
            MW_SURBL_MULTI = 16;
            PH_SURBL_MULTI = 8;
            DM_SURBL = 4;
            SURBL_BLOCKED = 1;
        }
    }

    "URIBL_MULTI" {
        ignore_defaults = true; # for compatibility with old defaults
        rbl = "multi.uribl.com";
        checks = ['emails', 'dkim', 'urls'];
        emails_domainonly = true;

        returnbits = {
            URIBL_BLOCKED = 1;
            URIBL_BLACK = 2;
            URIBL_GREY = 4;
            URIBL_RED = 8;
        }
    }

    "RSPAMD_URIBL" {
        ignore_defaults = true; # for compatibility with old defaults
        rbl = "uribl.rspamd.com";
        checks = ['emails', 'dkim', 'urls'];
        # Also check images
        images = true;
        # Check emails for URLs
        emails_domainonly = true;
        # Hashed BL
        hash = 'blake2';
        hash_len = 32;
        hash_format = 'base32';

        returncodes = {
            RSPAMD_URIBL = [
              "127.0.0.2",
            ];
        }
    }

    "SEM_URIBL_UNKNOWN" {
        ignore_defaults = true; # for compatibility with old defaults
        rbl = "uribl.spameatingmonkey.net";
        no_ip = true;
        checks = ['emails', 'dkim', 'urls'];
        emails_domainonly = true;
        returnbits {
        SEM_URIBL = 2;
        }
    }
}